apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.zzz.plugindemo"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}
//插件编写1
class Extension1{
    String var1=null
}
class Extension2{
    String var2=null
}

class TestPlugin implements Plugin<Project>{
    @Override
    void apply(Project target) {
        //利用Extension创建e1 e2 闭包，用于接受外部传递的参数值
        target.extensions.create('e1', Extension1)
        target.extensions.create('e2', Extension2)

        target.tasks.create("testTask"){
            doLast {
                println 'e1 = ' + target['e1'].var1
                println 'e2 = ' + target['e2'].var2
            }
        }
    }
}
apply plugin: TestPlugin

e1{
    var1="var1"
}
e2{
    var2="var2"
}
apply plugin: 'com.zzz.plugin'


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}